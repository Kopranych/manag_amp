

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 19 14:25:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F14K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0002BC                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _end_str
    61  0002BC  23                 	db	35
    62                           
    63                           ;initializer for _start_str
    64  0002BD  2A                 	db	42
    65  0000                     _TXREG1	set	4013
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _TXSTAbits	set	4012
    68  0000                     _TRISBbits	set	3987
    69  0000                     _ANSELHbits	set	3967
    70  0000                     _RCONbits	set	4048
    71  0000                     _PIE1bits	set	3997
    72  0000                     _INTCONbits	set	4082
    73  0000                     _RCREG1	set	4014
    74  0000                     _PIR1bits	set	3998
    75                           
    76                           	psect	mediumconst
    77  003E8C                     __pmediumconst:
    78                           	opt stack 0
    79  003E8C  00                 	db	0
    80  003E8D                     STR_5:
    81  003E8D  2A                 	db	42
    82  003E8E  20                 	db	32
    83  003E8F  2D                 	db	45
    84  003E90  20                 	db	32
    85  003E91  F1                 	db	-15
    86  003E92  E8                 	db	-24
    87  003E93  EC                 	db	-20
    88  003E94  E2                 	db	-30
    89  003E95  EE                 	db	-18
    90  003E96  EB                 	db	-21
    91  003E97  20                 	db	32
    92  003E98  ED                 	db	-19
    93  003E99  E0                 	db	-32
    94  003E9A  F7                 	db	-9
    95  003E9B  E0                 	db	-32
    96  003E9C  EB                 	db	-21
    97  003E9D  E0                 	db	-32
    98  003E9E  20                 	db	32
    99  003E9F  EA                 	db	-22
   100  003EA0  EE                 	db	-18
   101  003EA1  EC                 	db	-20
   102  003EA2  E0                 	db	-32
   103  003EA3  ED                 	db	-19
   104  003EA4  E4                 	db	-28
   105  003EA5  FB                 	db	-5
   106  003EA6  2C                 	db	44
   107  003EA7  20                 	db	32
   108  003EA8  ED                 	db	-19
   109  003EA9  EE                 	db	-18
   110  003EAA  EC                 	db	-20
   111  003EAB  E5                 	db	-27
   112  003EAC  F0                 	db	-16
   113  003EAD  20                 	db	32
   114  003EAE  EF                 	db	-17
   115  003EAF  EE                 	db	-18
   116  003EB0  E4                 	db	-28
   117  003EB1  EA                 	db	-22
   118  003EB2  EB                 	db	-21
   119  003EB3  FE                 	db	-2
   120  003EB4  F7                 	db	-9
   121  003EB5  E5                 	db	-27
   122  003EB6  ED                 	db	-19
   123  003EB7  E8                 	db	-24
   124  003EB8  FF                 	db	-1
   125  003EB9  20                 	db	32
   126  003EBA  F3                 	db	-13
   127  003EBB  F1                 	db	-15
   128  003EBC  E8                 	db	-24
   129  003EBD  EB                 	db	-21
   130  003EBE  E8                 	db	-24
   131  003EBF  F2                 	db	-14
   132  003EC0  E5                 	db	-27
   133  003EC1  EB                 	db	-21
   134  003EC2  FF                 	db	-1
   135  003EC3  28                 	db	40
   136  003EC4  30                 	db	48	;'0'
   137  003EC5  20                 	db	32
   138  003EC6  2D                 	db	45
   139  003EC7  20                 	db	32
   140  003EC8  EE                 	db	-18
   141  003EC9  F2                 	db	-14
   142  003ECA  EA                 	db	-22
   143  003ECB  EB                 	db	-21
   144  003ECC  FE                 	db	-2
   145  003ECD  F7                 	db	-9
   146  003ECE  E8                 	db	-24
   147  003ECF  F2                 	db	-14
   148  003ED0  FC                 	db	-4
   149  003ED1  2C                 	db	44
   150  003ED2  20                 	db	32
   151  003ED3  31                 	db	49	;'1'
   152  003ED4  20                 	db	32
   153  003ED5  2D                 	db	45
   154  003ED6  20                 	db	32
   155  003ED7  EF                 	db	-17
   156  003ED8  EE                 	db	-18
   157  003ED9  E4                 	db	-28
   158  003EDA  EA                 	db	-22
   159  003EDB  EB                 	db	-21
   160  003EDC  FE                 	db	-2
   161  003EDD  F7                 	db	-9
   162  003EDE  E8                 	db	-24
   163  003EDF  F2                 	db	-14
   164  003EE0  FC                 	db	-4
   165  003EE1  29                 	db	41
   166  003EE2  2C                 	db	44
   167  003EE3  20                 	db	32
   168  003EE4  EF                 	db	-17
   169  003EE5  F0                 	db	-16
   170  003EE6  EE                 	db	-18
   171  003EE7  E1                 	db	-31
   172  003EE8  E5                 	db	-27
   173  003EE9  EB                 	db	-21
   174  003EEA  2C                 	db	44
   175  003EEB  E7                 	db	-25
   176  003EEC  ED                 	db	-19
   177  003EED  E0                 	db	-32
   178  003EEE  F7                 	db	-9
   179  003EEF  E5                 	db	-27
   180  003EF0  ED                 	db	-19
   181  003EF1  E8                 	db	-24
   182  003EF2  E5                 	db	-27
   183  003EF3  20                 	db	32
   184  003EF4  E0                 	db	-32
   185  003EF5  F2                 	db	-14
   186  003EF6  F2                 	db	-14
   187  003EF7  E5                 	db	-27
   188  003EF8  ED                 	db	-19
   189  003EF9  FE                 	db	-2
   190  003EFA  E0                 	db	-32
   191  003EFB  F2                 	db	-14
   192  003EFC  EE                 	db	-18
   193  003EFD  F0                 	db	-16
   194  003EFE  E0                 	db	-32
   195  003EFF  20                 	db	32
   196  003F00  E2                 	db	-30
   197  003F01  20                 	db	32
   198  003F02  E4                 	db	-28
   199  003F03  E5                 	db	-27
   200  003F04  F6                 	db	-10
   201  003F05  E8                 	db	-24
   202  003F06  E1                 	db	-31
   203  003F07  E5                 	db	-27
   204  003F08  EB                 	db	-21
   205  003F09  E0                 	db	-32
   206  003F0A  F5                 	db	-11
   207  003F0B  20                 	db	32
   208  003F0C  28                 	db	40
   209  003F0D  EE                 	db	-18
   210  003F0E  F2                 	db	-14
   211  003F0F  20                 	db	32
   212  003F10  30                 	db	48	;'0'
   213  003F11  2C                 	db	44
   214  003F12  35                 	db	53	;'5'
   215  003F13  20                 	db	32
   216  003F14  E4                 	db	-28
   217  003F15  EE                 	db	-18
   218  003F16  20                 	db	32
   219  003F17  33                 	db	51	;'3'
   220  003F18  31                 	db	49	;'1'
   221  003F19  2C                 	db	44
   222  003F1A  35                 	db	53	;'5'
   223  003F1B  20                 	db	32
   224  003F1C  F1                 	db	-15
   225  003F1D  20                 	db	32
   226  003F1E  F8                 	db	-8
   227  003F1F  E0                 	db	-32
   228  003F20  E3                 	db	-29
   229  003F21  EE                 	db	-18
   230  003F22  EC                 	db	-20
   231  003F23  20                 	db	32
   232  003F24  30                 	db	48	;'0'
   233  003F25  2C                 	db	44
   234  003F26  35                 	db	53	;'5'
   235  003F27  29                 	db	41
   236  003F28  2C                 	db	44
   237  003F29  20                 	db	32
   238  003F2A  23                 	db	35
   239  003F2B  20                 	db	32
   240  003F2C  2D                 	db	45
   241  003F2D  20                 	db	32
   242  003F2E  F1                 	db	-15
   243  003F2F  E8                 	db	-24
   244  003F30  EC                 	db	-20
   245  003F31  E2                 	db	-30
   246  003F32  EE                 	db	-18
   247  003F33  EB                 	db	-21
   248  003F34  20                 	db	32
   249  003F35  E7                 	db	-25
   250  003F36  E0                 	db	-32
   251  003F37  E2                 	db	-30
   252  003F38  E5                 	db	-27
   253  003F39  F0                 	db	-16
   254  003F3A  F8                 	db	-8
   255  003F3B  E5                 	db	-27
   256  003F3C  ED                 	db	-19
   257  003F3D  E8                 	db	-24
   258  003F3E  FF                 	db	-1
   259  003F3F  20                 	db	32
   260  003F40  EA                 	db	-22
   261  003F41  EE                 	db	-18
   262  003F42  EC                 	db	-20
   263  003F43  E0                 	db	-32
   264  003F44  ED                 	db	-19
   265  003F45  E4                 	db	-28
   266  003F46  FB                 	db	-5
   267  003F47  00                 	db	0
   268  003F48                     STR_8:
   269  003F48  F2                 	db	-14
   270  003F49  2E                 	db	46
   271  003F4A  E5                 	db	-27
   272  003F4B  2E                 	db	46
   273  003F4C  20                 	db	32
   274  003F4D  EF                 	db	-17
   275  003F4E  EE                 	db	-18
   276  003F4F  E4                 	db	-28
   277  003F50  EA                 	db	-22
   278  003F51  EB                 	db	-21
   279  003F52  FE                 	db	-2
   280  003F53  F7                 	db	-9
   281  003F54  E8                 	db	-24
   282  003F55  F2                 	db	-14
   283  003F56  FC                 	db	-4
   284  003F57  20                 	db	32
   285  003F58  F3                 	db	-13
   286  003F59  F1                 	db	-15
   287  003F5A  E8                 	db	-24
   288  003F5B  EB                 	db	-21
   289  003F5C  E8                 	db	-24
   290  003F5D  F2                 	db	-14
   291  003F5E  E5                 	db	-27
   292  003F5F  EB                 	db	-21
   293  003F60  FC                 	db	-4
   294  003F61  2C                 	db	44
   295  003F62  20                 	db	32
   296  003F63  E7                 	db	-25
   297  003F64  ED                 	db	-19
   298  003F65  E0                 	db	-32
   299  003F66  F7                 	db	-9
   300  003F67  E5                 	db	-27
   301  003F68  ED                 	db	-19
   302  003F69  E8                 	db	-24
   303  003F6A  E5                 	db	-27
   304  003F6B  20                 	db	32
   305  003F6C  E0                 	db	-32
   306  003F6D  F2                 	db	-14
   307  003F6E  F2                 	db	-14
   308  003F6F  E5                 	db	-27
   309  003F70  ED                 	db	-19
   310  003F71  FE                 	db	-2
   311  003F72  E0                 	db	-32
   312  003F73  F2                 	db	-14
   313  003F74  EE                 	db	-18
   314  003F75  F0                 	db	-16
   315  003F76  E0                 	db	-32
   316  003F77  20                 	db	32
   317  003F78  33                 	db	51	;'3'
   318  003F79  30                 	db	48	;'0'
   319  003F7A  20                 	db	32
   320  003F7B  E4                 	db	-28
   321  003F7C  E5                 	db	-27
   322  003F7D  F6                 	db	-10
   323  003F7E  E8                 	db	-24
   324  003F7F  E1                 	db	-31
   325  003F80  E5                 	db	-27
   326  003F81  EB                 	db	-21
   327  003F82  00                 	db	0
   328  003F83                     STR_2:
   329  003F83  D3                 	db	-45
   330  003F84  F1                 	db	-15
   331  003F85  E8                 	db	-24
   332  003F86  EB                 	db	-21
   333  003F87  E8                 	db	-24
   334  003F88  F2                 	db	-14
   335  003F89  E5                 	db	-27
   336  003F8A  EB                 	db	-21
   337  003F8B  FC                 	db	-4
   338  003F8C  20                 	db	32
   339  003F8D  EF                 	db	-17
   340  003F8E  EE                 	db	-18
   341  003F8F  E4                 	db	-28
   342  003F90  EA                 	db	-22
   343  003F91  EB                 	db	-21
   344  003F92  FE                 	db	-2
   345  003F93  F7                 	db	-9
   346  003F94  E5                 	db	-27
   347  003F95  ED                 	db	-19
   348  003F96  2C                 	db	44
   349  003F97  20                 	db	32
   350  003F98  E0                 	db	-32
   351  003F99  F2                 	db	-14
   352  003F9A  F2                 	db	-14
   353  003F9B  E5                 	db	-27
   354  003F9C  ED                 	db	-19
   355  003F9D  FE                 	db	-2
   356  003F9E  E0                 	db	-32
   357  003F9F  F2                 	db	-14
   358  003FA0  EE                 	db	-18
   359  003FA1  F0                 	db	-16
   360  003FA2  3A                 	db	58	;':'
   361  003FA3  00                 	db	0
   362  003FA4                     STR_1:
   363  003FA4  D3                 	db	-45
   364  003FA5  F1                 	db	-15
   365  003FA6  E8                 	db	-24
   366  003FA7  EB                 	db	-21
   367  003FA8  E8                 	db	-24
   368  003FA9  F2                 	db	-14
   369  003FAA  E5                 	db	-27
   370  003FAB  EB                 	db	-21
   371  003FAC  FC                 	db	-4
   372  003FAD  20                 	db	32
   373  003FAE  EE                 	db	-18
   374  003FAF  F2                 	db	-14
   375  003FB0  EA                 	db	-22
   376  003FB1  EB                 	db	-21
   377  003FB2  FE                 	db	-2
   378  003FB3  F7                 	db	-9
   379  003FB4  E5                 	db	-27
   380  003FB5  ED                 	db	-19
   381  003FB6  2C                 	db	44
   382  003FB7  20                 	db	32
   383  003FB8  E0                 	db	-32
   384  003FB9  F2                 	db	-14
   385  003FBA  F2                 	db	-14
   386  003FBB  E5                 	db	-27
   387  003FBC  ED                 	db	-19
   388  003FBD  FE                 	db	-2
   389  003FBE  E0                 	db	-32
   390  003FBF  F2                 	db	-14
   391  003FC0  EE                 	db	-18
   392  003FC1  F0                 	db	-16
   393  003FC2  3A                 	db	58	;':'
   394  003FC3  00                 	db	0
   395  003FC4                     STR_4:
   396  003FC4  CE                 	db	-50
   397  003FC5  F2                 	db	-14
   398  003FC6  EF                 	db	-17
   399  003FC7  F0                 	db	-16
   400  003FC8  E0                 	db	-32
   401  003FC9  E2                 	db	-30
   402  003FCA  F2                 	db	-14
   403  003FCB  E5                 	db	-27
   404  003FCC  20                 	db	32
   405  003FCD  EA                 	db	-22
   406  003FCE  EE                 	db	-18
   407  003FCF  EC                 	db	-20
   408  003FD0  E0                 	db	-32
   409  003FD1  E4                 	db	-28
   410  003FD2  F3                 	db	-13
   411  003FD3  20                 	db	32
   412  003FD4  E2                 	db	-30
   413  003FD5  20                 	db	32
   414  003FD6  F4                 	db	-12
   415  003FD7  EE                 	db	-18
   416  003FD8  F0                 	db	-16
   417  003FD9  EC                 	db	-20
   418  003FDA  E0                 	db	-32
   419  003FDB  F2                 	db	-14
   420  003FDC  E5                 	db	-27
   421  003FDD  3A                 	db	58	;':'
   422  003FDE  00                 	db	0
   423  003FDF                     STR_3:
   424  003FDF  CD                 	db	-51
   425  003FE0  E5                 	db	-27
   426  003FE1  E2                 	db	-30
   427  003FE2  E5                 	db	-27
   428  003FE3  F0                 	db	-16
   429  003FE4  ED                 	db	-19
   430  003FE5  E0                 	db	-32
   431  003FE6  FF                 	db	-1
   432  003FE7  20                 	db	32
   433  003FE8  EA                 	db	-22
   434  003FE9  EE                 	db	-18
   435  003FEA  EC                 	db	-20
   436  003FEB  E0                 	db	-32
   437  003FEC  ED                 	db	-19
   438  003FED  E4                 	db	-28
   439  003FEE  E0                 	db	-32
   440  003FEF  00                 	db	0
   441  003FF0                     STR_6:
   442  003FF0  CF                 	db	-49
   443  003FF1  F0                 	db	-16
   444  003FF2  E8                 	db	-24
   445  003FF3  EC                 	db	-20
   446  003FF4  E5                 	db	-27
   447  003FF5  F0                 	db	-16
   448  003FF6  3A                 	db	58	;':'
   449  003FF7  00                 	db	0
   450  003FF8                     STR_7:
   451  003FF8  2A                 	db	42
   452  003FF9  31                 	db	49	;'1'
   453  003FFA  20                 	db	32
   454  003FFB  33                 	db	51	;'3'
   455  003FFC  30                 	db	48	;'0'
   456  003FFD  23                 	db	35
   457  003FFE  00                 	db	0
   458  003FFF  00                 	db	0	; dummy byte at the end
   459  0000                     
   460                           ; #config settings
   461                           
   462                           	psect	cinit
   463  000274                     __pcinit:
   464                           	opt stack 0
   465  000274                     start_initialization:
   466                           	opt stack 0
   467  000274                     __initialization:
   468                           	opt stack 0
   469                           
   470                           ; Initialize objects allocated to COMRAM (2 bytes)
   471                           ; load TBLPTR registers with __pidataCOMRAM
   472  000274  0EBC               	movlw	low __pidataCOMRAM
   473  000276  6EF6               	movwf	tblptrl,c
   474  000278  0E02               	movlw	high __pidataCOMRAM
   475  00027A  6EF7               	movwf	tblptrh,c
   476  00027C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   477  00027E  6EF8               	movwf	tblptru,c
   478  000280  0009               	tblrd		*+	;fetch initializer
   479  000282  CFF5 F037          	movff	tablat,__pdataCOMRAM
   480  000286  0009               	tblrd		*+	;fetch initializer
   481  000288  CFF5 F038          	movff	tablat,__pdataCOMRAM+1
   482                           
   483                           ; Clear objects allocated to COMRAM (15 bytes)
   484  00028C  EE00  F028         	lfsr	0,__pbssCOMRAM
   485  000290  0E0F               	movlw	15
   486  000292                     clear_0:
   487  000292  6AEE               	clrf	postinc0,c
   488  000294  06E8               	decf	wreg,f,c
   489  000296  E1FD               	bnz	clear_0
   490  000298                     end_of_initialization:
   491                           	opt stack 0
   492  000298                     __end_of__initialization:
   493                           	opt stack 0
   494  000298  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   495  00029A  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   496  00029C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   497  00029E  6EF8               	movwf	tblptru,c
   498  0002A0  0100               	movlb	0
   499  0002A2  EF86  F000         	goto	_main	;jump to C main() function
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           
   507                           	psect	bssCOMRAM
   508  000028                     __pbssCOMRAM:
   509                           	opt stack 0
   510  000028                     _array_char:
   511                           	opt stack 0
   512  000028                     	ds	6
   513  00002E                     _read_en:
   514                           	opt stack 0
   515  00002E                     	ds	2
   516  000030                     _index_recive:
   517                           	opt stack 0
   518  000030                     	ds	2
   519  000032                     _attenuator:
   520                           	opt stack 0
   521  000032                     	ds	2
   522  000034                     _isReciver:
   523                           	opt stack 0
   524  000034                     	ds	1
   525  000035                     _switch_amp:
   526                           	opt stack 0
   527  000035                     	ds	1
   528  000036                     _tmprecive:
   529                           	opt stack 0
   530  000036                     	ds	1
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           
   538                           	psect	dataCOMRAM
   539  000037                     __pdataCOMRAM:
   540                           	opt stack 0
   541  000037                     _end_str:
   542                           	opt stack 0
   543  000037                     	ds	1
   544  000038                     _start_str:
   545                           	opt stack 0
   546  000038                     	ds	1
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554                           	psect	cstackCOMRAM
   555  000001                     __pcstackCOMRAM:
   556                           	opt stack 0
   557  000001                     ??_high_isr:
   558  000001                     
   559                           ; 1 bytes @ 0x0
   560  000001                     	ds	18
   561  000013                     ?_strlen:
   562                           	opt stack 0
   563  000013                     UART1PutChar@Ch:
   564                           	opt stack 0
   565  000013                     strlen@s:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x12
   569  000013                     	ds	2
   570  000015                     ??_strlen:
   571                           
   572                           ; 1 bytes @ 0x14
   573  000015                     	ds	2
   574  000017                     strlen@cp:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578  000017                     	ds	2
   579  000019                     UART1PutStr@str:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x18
   583  000019                     	ds	2
   584  00001B                     ??_UART1PutStr:
   585                           
   586                           ; 1 bytes @ 0x1A
   587  00001B                     	ds	2
   588  00001D                     UART1PutStr@size:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x1C
   592  00001D                     	ds	2
   593  00001F                     UART1PutStr@i:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x1E
   597  00001F                     	ds	2
   598  000021                     
   599                           ; 2 bytes @ 0x20
   600  000021                     	ds	2
   601  000023                     
   602                           ; 3 bytes @ 0x22
   603  000023                     	ds	3
   604  000026                     ??_main:
   605                           
   606                           ; 1 bytes @ 0x25
   607  000026                     	ds	2
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           postinc0	equ	0xFEE
   613                           wreg	equ	0xFE8
   614                           
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 56 in file "main_key.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  argc            2   32[COMRAM] int 
   623 ;;  argv            3   34[COMRAM] PTR PTR unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  2   32[COMRAM] int 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1
   635 ;;      Params:         5       0       0
   636 ;;      Locals:         0       0       0
   637 ;;      Temps:          2       0       0
   638 ;;      Totals:         7       0       0
   639 ;;Total ram usage:        7 bytes
   640 ;; Hardware stack levels required when called:    3
   641 ;; This function calls:
   642 ;;		_UART1PutStr
   643 ;;		_init_interrupt
   644 ;; This function is called by:
   645 ;;		Startup code after reset
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text0
   650  00010C                     __ptext0:
   651                           	opt stack 0
   652  00010C                     _main:
   653                           	opt stack 28
   654                           
   655                           ;main_key.c: 57: init_interrupt();
   656                           
   657                           ;incstack = 0
   658  00010C  EC59  F001         	call	_init_interrupt	;wreg free
   659  000110                     
   660                           ;main_key.c: 61: if(isReciver == 1){
   661  000110  0434               	decf	_isReciver,w,c
   662  000112  A4D8               	btfss	status,2,c
   663  000114  D7FD               	goto	l47
   664                           
   665                           ;main_key.c: 62: isReciver = 0;
   666  000116  0E00               	movlw	0
   667  000118  6E34               	movwf	_isReciver,c
   668                           
   669                           ;main_key.c: 64: switch_amp = array_char[1];
   670  00011A  C029  F035         	movff	_array_char+1,_switch_amp
   671                           
   672                           ;main_key.c: 65: attenuator[0] = array_char[3];
   673  00011E  C02B  F032         	movff	_array_char+3,_attenuator
   674                           
   675                           ;main_key.c: 66: attenuator[1] = array_char[4];
   676  000122  C02C  F033         	movff	_array_char+4,_attenuator+1
   677                           
   678                           ;main_key.c: 67: switch(switch_amp){
   679  000126  D04F               	goto	l49
   680  000128                     
   681                           ;main_key.c: 71: UART1PutStr("Óñèëèòåëü îòêëþ÷åí, àòòåíþàòîð:"+attenuator[0]+attenuator[
      +                          1]);
   682  000128  5032               	movf	_attenuator,w,c
   683  00012A  0D01               	mullw	1
   684  00012C  0EA4               	movlw	low STR_1
   685  00012E  6E26               	movwf	??_main& (0+255),c
   686  000130  0E3F               	movlw	high STR_1
   687  000132  6E27               	movwf	(??_main+1)& (0+255),c
   688  000134  50F3               	movf	prodl,w,c
   689  000136  2626               	addwf	??_main,f,c
   690  000138  50F4               	movf	prodh,w,c
   691  00013A  2227               	addwfc	??_main+1,f,c
   692  00013C  5033               	movf	_attenuator+1,w,c
   693  00013E  0D01               	mullw	1
   694  000140  50F3               	movf	prodl,w,c
   695  000142  2426               	addwf	??_main,w,c
   696  000144  6E19               	movwf	UART1PutStr@str,c
   697  000146  50F4               	movf	prodh,w,c
   698  000148  2027               	addwfc	??_main+1,w,c
   699  00014A  6E1A               	movwf	UART1PutStr@str+1,c
   700  00014C  ECEB  F000         	call	_UART1PutStr	;wreg free
   701                           
   702                           ;main_key.c: 72: break;
   703  000150  D7DF               	goto	l47
   704  000152                     
   705                           ;main_key.c: 76: UART1PutStr("Óñèëèòåëü ïîäêëþ÷åí, àòòåíþàòîð:"+attenuator[0]+attenuator
      +                          [1]);
   706  000152  5032               	movf	_attenuator,w,c
   707  000154  0D01               	mullw	1
   708  000156  0E83               	movlw	low STR_2
   709  000158  6E26               	movwf	??_main& (0+255),c
   710  00015A  0E3F               	movlw	high STR_2
   711  00015C  6E27               	movwf	(??_main+1)& (0+255),c
   712  00015E  50F3               	movf	prodl,w,c
   713  000160  2626               	addwf	??_main,f,c
   714  000162  50F4               	movf	prodh,w,c
   715  000164  2227               	addwfc	??_main+1,f,c
   716  000166  5033               	movf	_attenuator+1,w,c
   717  000168  0D01               	mullw	1
   718  00016A  50F3               	movf	prodl,w,c
   719  00016C  2426               	addwf	??_main,w,c
   720  00016E  6E19               	movwf	UART1PutStr@str,c
   721  000170  50F4               	movf	prodh,w,c
   722  000172  2027               	addwfc	??_main+1,w,c
   723  000174  6E1A               	movwf	UART1PutStr@str+1,c
   724  000176  ECEB  F000         	call	_UART1PutStr	;wreg free
   725                           
   726                           ;main_key.c: 77: break;
   727  00017A  D7CA               	goto	l47
   728  00017C                     
   729                           ;main_key.c: 79: UART1PutStr("Íåâåðíàÿ êîìàíäà");
   730  00017C  0EDF               	movlw	low STR_3
   731  00017E  6E19               	movwf	UART1PutStr@str,c
   732  000180  0E3F               	movlw	high STR_3
   733  000182  6E1A               	movwf	UART1PutStr@str+1,c
   734  000184  ECEB  F000         	call	_UART1PutStr	;wreg free
   735                           
   736                           ;main_key.c: 80: UART1PutStr("Îòïðàâòå êîìàäó â ôîðìàòå:");
   737  000188  0EC4               	movlw	low STR_4
   738  00018A  6E19               	movwf	UART1PutStr@str,c
   739  00018C  0E3F               	movlw	high STR_4
   740  00018E  6E1A               	movwf	UART1PutStr@str+1,c
   741  000190  ECEB  F000         	call	_UART1PutStr	;wreg free
   742                           
   743                           ;main_key.c: 81: UART1PutStr("* - ñèìâîë íà÷àëà êîìàíäû, íîìåð ïîäêëþ÷åíèÿ óñèëèòåëÿ"
   744                           ;main_key.c: 82: "(0 - îòêëþ÷èòü, 1 - ïîäêëþ÷èòü), ïðîáåë,"
   745                           ;main_key.c: 83: "çíà÷åíèå àòòåíþàòîðà â äåöèáåëàõ (îò 0,5 äî 31,5 ñ øàãîì 0,5), # - ñèì
      +                          âîë çàâåðøåíèÿ êîìàíäû");
   746  000194  0E8D               	movlw	low STR_5
   747  000196  6E19               	movwf	UART1PutStr@str,c
   748  000198  0E3E               	movlw	high STR_5
   749  00019A  6E1A               	movwf	UART1PutStr@str+1,c
   750  00019C  ECEB  F000         	call	_UART1PutStr	;wreg free
   751                           
   752                           ;main_key.c: 84: UART1PutStr("Ïðèìåð:");
   753  0001A0  0EF0               	movlw	low STR_6
   754  0001A2  6E19               	movwf	UART1PutStr@str,c
   755  0001A4  0E3F               	movlw	high STR_6
   756  0001A6  6E1A               	movwf	UART1PutStr@str+1,c
   757  0001A8  ECEB  F000         	call	_UART1PutStr	;wreg free
   758                           
   759                           ;main_key.c: 85: UART1PutStr("*1 30#");
   760  0001AC  0EF8               	movlw	low STR_7
   761  0001AE  6E19               	movwf	UART1PutStr@str,c
   762  0001B0  0E3F               	movlw	high STR_7
   763  0001B2  6E1A               	movwf	UART1PutStr@str+1,c
   764  0001B4  ECEB  F000         	call	_UART1PutStr	;wreg free
   765                           
   766                           ;main_key.c: 86: UART1PutStr("ò.å. ïîäêëþ÷èòü óñèëèòåëü, çíà÷åíèå àòòåíþàòîðà 30 äåöèáåë
      +                          ");
   767  0001B8  0E48               	movlw	low STR_8
   768  0001BA  6E19               	movwf	UART1PutStr@str,c
   769  0001BC  0E3F               	movlw	high STR_8
   770  0001BE  6E1A               	movwf	UART1PutStr@str+1,c
   771  0001C0  ECEB  F000         	call	_UART1PutStr	;wreg free
   772                           
   773                           ;main_key.c: 87: }
   774  0001C4  D7A5               	goto	l47
   775  0001C6                     l49:
   776  0001C6  5035               	movf	_switch_amp,w,c
   777                           
   778                           ; Switch size 1, requested type "space"
   779                           ; Number of cases is 2, Range of values is 48 to 49
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte            7     4 (average)
   783                           ;	Chosen strategy is simple_byte
   784  0001C8  0A30               	xorlw	48	; case 48
   785  0001CA  B4D8               	btfsc	status,2,c
   786  0001CC  D7AD               	goto	l50
   787  0001CE  0A01               	xorlw	1	; case 49
   788  0001D0  B4D8               	btfsc	status,2,c
   789  0001D2  D7BF               	goto	l52
   790  0001D4  D7D3               	goto	l53
   791  0001D6                     __end_of_main:
   792                           	opt stack 0
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           prodh	equ	0xFF4
   798                           prodl	equ	0xFF3
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _init_interrupt *****************
   804 ;; Defined at:
   805 ;;		line 93 in file "main_key.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		None
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1
   819 ;;      Params:         0       0       0
   820 ;;      Locals:         0       0       0
   821 ;;      Temps:          0       0       0
   822 ;;      Totals:         0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text1
   834  0002B2                     __ptext1:
   835                           	opt stack 0
   836  0002B2                     _init_interrupt:
   837                           	opt stack 29
   838                           
   839                           ;main_key.c: 94: INTCONbits.GIE = 1;
   840                           
   841                           ;incstack = 0
   842  0002B2  8EF2               	bsf	intcon,7,c	;volatile
   843                           
   844                           ;main_key.c: 95: INTCONbits.PEIE = 1;
   845  0002B4  8CF2               	bsf	intcon,6,c	;volatile
   846                           
   847                           ;main_key.c: 96: PIE1bits.RCIE = 1;
   848  0002B6  8A9D               	bsf	3997,5,c	;volatile
   849                           
   850                           ;main_key.c: 97: RCONbits.IPEN = 1;
   851  0002B8  8ED0               	bsf	4048,7,c	;volatile
   852  0002BA  0012               	return		;funcret
   853  0002BC                     __end_of_init_interrupt:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           prodh	equ	0xFF4
   860                           prodl	equ	0xFF3
   861                           intcon	equ	0xFF2
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           status	equ	0xFD8
   865                           
   866 ;; *************** function _UART1PutStr *****************
   867 ;; Defined at:
   868 ;;		line 43 in file "euart.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  str             2   24[COMRAM] PTR unsigned char 
   871 ;;		 -> STR_8(59), STR_7(7), STR_6(8), STR_5(187), 
   872 ;;		 -> STR_4(27), STR_3(17), STR_2(33), STR_1(32), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  i               2   30[COMRAM] int 
   875 ;;  size            2   28[COMRAM] int 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1
   885 ;;      Params:         2       0       0
   886 ;;      Locals:         4       0       0
   887 ;;      Temps:          2       0       0
   888 ;;      Totals:         8       0       0
   889 ;;Total ram usage:        8 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    2
   892 ;; This function calls:
   893 ;;		_UART1PutChar
   894 ;;		_strlen
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text2
   901  0001D6                     __ptext2:
   902                           	opt stack 0
   903  0001D6                     _UART1PutStr:
   904                           	opt stack 28
   905                           
   906                           ;euart.c: 44: int size = strlen(str);
   907                           
   908                           ;incstack = 0
   909  0001D6  C019  F013         	movff	UART1PutStr@str,strlen@s
   910  0001DA  C01A  F014         	movff	UART1PutStr@str+1,strlen@s+1
   911  0001DE  EC1B  F001         	call	_strlen	;wreg free
   912  0001E2  C013  F01D         	movff	?_strlen,UART1PutStr@size
   913  0001E6  C014  F01E         	movff	?_strlen+1,UART1PutStr@size+1
   914                           
   915                           ;euart.c: 45: int i;
   916                           ;euart.c: 46: for(i = 0; i < size;i++){
   917  0001EA  0E00               	movlw	0
   918  0001EC  6E20               	movwf	UART1PutStr@i+1,c
   919  0001EE  0E00               	movlw	0
   920  0001F0  6E1F               	movwf	UART1PutStr@i,c
   921  0001F2  D010               	goto	l86
   922  0001F4                     
   923                           ;euart.c: 47: UART1PutChar(str[i]);
   924  0001F4  501F               	movf	UART1PutStr@i,w,c
   925  0001F6  2419               	addwf	UART1PutStr@str,w,c
   926  0001F8  6E1B               	movwf	??_UART1PutStr& (0+255),c
   927  0001FA  5020               	movf	UART1PutStr@i+1,w,c
   928  0001FC  201A               	addwfc	UART1PutStr@str+1,w,c
   929  0001FE  6E1C               	movwf	(??_UART1PutStr+1)& (0+255),c
   930  000200  C01B  FFF6         	movff	??_UART1PutStr,tblptrl
   931  000204  C01C  FFF7         	movff	??_UART1PutStr+1,tblptrh
   932  000208                     	if	0	;tblptru may be non-zero
   933  000208                     	endif
   934  000208                     	if	0	;tblptru may be non-zero
   935  000208                     	endif
   936  000208  0008               	tblrd		*
   937  00020A  50F5               	movf	tablat,w,c
   938  00020C  EC53  F001         	call	_UART1PutChar
   939  000210  4A1F               	infsnz	UART1PutStr@i,f,c
   940  000212  2A20               	incf	UART1PutStr@i+1,f,c
   941  000214                     l86:
   942  000214  501D               	movf	UART1PutStr@size,w,c
   943  000216  5C1F               	subwf	UART1PutStr@i,w,c
   944  000218  5020               	movf	UART1PutStr@i+1,w,c
   945  00021A  0A80               	xorlw	128
   946  00021C  6E1B               	movwf	??_UART1PutStr& (0+255),c
   947  00021E  501E               	movf	UART1PutStr@size+1,w,c
   948  000220  0A80               	xorlw	128
   949  000222  581B               	subwfb	??_UART1PutStr& (0+255),w,c
   950  000224  A0D8               	btfss	status,0,c
   951  000226  D7E6               	goto	l87
   952                           
   953                           ;euart.c: 48: }
   954                           ;euart.c: 49: UART1PutChar(0xD);
   955  000228  0E0D               	movlw	13
   956  00022A  EC53  F001         	call	_UART1PutChar
   957                           
   958                           ;euart.c: 50: UART1PutChar(0xA);
   959  00022E  0E0A               	movlw	10
   960  000230  EC53  F001         	call	_UART1PutChar
   961  000234  0012               	return		;funcret
   962  000236                     __end_of_UART1PutStr:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           prodh	equ	0xFF4
   969                           prodl	equ	0xFF3
   970                           intcon	equ	0xFF2
   971                           postinc0	equ	0xFEE
   972                           wreg	equ	0xFE8
   973                           status	equ	0xFD8
   974                           
   975 ;; *************** function _strlen *****************
   976 ;; Defined at:
   977 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\strlen.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  s               2   18[COMRAM] PTR const unsigned char 
   980 ;;		 -> STR_8(59), STR_7(7), STR_6(8), STR_5(187), 
   981 ;;		 -> STR_4(27), STR_3(17), STR_2(33), STR_1(32), 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  cp              2   22[COMRAM] PTR const unsigned char 
   984 ;;		 -> STR_8(59), STR_7(7), STR_6(8), STR_5(187), 
   985 ;;		 -> STR_4(27), STR_3(17), STR_2(33), STR_1(32), 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2   18[COMRAM] unsigned int 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1
   995 ;;      Params:         2       0       0
   996 ;;      Locals:         2       0       0
   997 ;;      Temps:          2       0       0
   998 ;;      Totals:         6       0       0
   999 ;;Total ram usage:        6 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_UART1PutStr
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text3
  1010  000236                     __ptext3:
  1011                           	opt stack 0
  1012  000236                     _strlen:
  1013                           	opt stack 28
  1014                           
  1015                           ;incstack = 0
  1016  000236  C013  F017         	movff	strlen@s,strlen@cp
  1017  00023A  C014  F018         	movff	strlen@s+1,strlen@cp+1
  1018  00023E  D002               	goto	l637
  1019  000240  4A17               	infsnz	strlen@cp,f,c
  1020  000242  2A18               	incf	strlen@cp+1,f,c
  1021  000244                     l637:
  1022  000244  C017  FFF6         	movff	strlen@cp,tblptrl
  1023  000248  C018  FFF7         	movff	strlen@cp+1,tblptrh
  1024  00024C                     	if	0	;tblptru may be non-zero
  1025  00024C                     	endif
  1026  00024C                     	if	0	;tblptru may be non-zero
  1027  00024C                     	endif
  1028  00024C  0008               	tblrd		*
  1029  00024E  50F5               	movf	tablat,w,c
  1030  000250  0900               	iorlw	0
  1031  000252  A4D8               	btfss	status,2,c
  1032  000254  D7F5               	goto	l638
  1033  000256  C013  F015         	movff	strlen@s,??_strlen
  1034  00025A  C014  F016         	movff	strlen@s+1,??_strlen+1
  1035  00025E  1E15               	comf	??_strlen,f,c
  1036  000260  1E16               	comf	??_strlen+1,f,c
  1037  000262  4A15               	infsnz	??_strlen,f,c
  1038  000264  2A16               	incf	??_strlen+1,f,c
  1039  000266  5017               	movf	strlen@cp,w,c
  1040  000268  2415               	addwf	??_strlen,w,c
  1041  00026A  6E13               	movwf	?_strlen,c
  1042  00026C  5018               	movf	strlen@cp+1,w,c
  1043  00026E  2016               	addwfc	??_strlen+1,w,c
  1044  000270  6E14               	movwf	?_strlen+1,c
  1045  000272  0012               	return	
  1046  000274                     __end_of_strlen:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           prodh	equ	0xFF4
  1053                           prodl	equ	0xFF3
  1054                           intcon	equ	0xFF2
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _UART1PutChar *****************
  1060 ;; Defined at:
  1061 ;;		line 36 in file "euart.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  Ch              1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  Ch              1   18[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1
  1075 ;;      Params:         0       0       0
  1076 ;;      Locals:         1       0       0
  1077 ;;      Temps:          0       0       0
  1078 ;;      Totals:         1       0       0
  1079 ;;Total ram usage:        1 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_UART1PutStr
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text4
  1090  0002A6                     __ptext4:
  1091                           	opt stack 0
  1092  0002A6                     _UART1PutChar:
  1093                           	opt stack 28
  1094                           
  1095                           ;incstack = 0
  1096                           ;UART1PutChar@Ch stored from wreg
  1097  0002A6  6E13               	movwf	UART1PutChar@Ch,c
  1098  0002A8                     
  1099                           ;euart.c: 38: while(TXSTAbits.TRMT == 0);
  1100  0002A8  A2AC               	btfss	4012,1,c	;volatile
  1101  0002AA  D7FE               	goto	l717
  1102                           
  1103                           ;euart.c: 39: TXREG1 = Ch;
  1104  0002AC  C013  FFAD         	movff	UART1PutChar@Ch,4013	;volatile
  1105  0002B0  0012               	return		;funcret
  1106  0002B2                     __end_of_UART1PutChar:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           prodh	equ	0xFF4
  1113                           prodl	equ	0xFF3
  1114                           intcon	equ	0xFF2
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _high_isr *****************
  1120 ;; Defined at:
  1121 ;;		line 32 in file "main_key.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1
  1135 ;;      Params:         0       0       0
  1136 ;;      Locals:         0       0       0
  1137 ;;      Temps:         18       0       0
  1138 ;;      Totals:        18       0       0
  1139 ;;Total ram usage:       18 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		Interrupt level 2
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	intcode
  1149  000008                     __pintcode:
  1150                           	opt stack 0
  1151  000008                     _high_isr:
  1152                           	opt stack 28
  1153                           
  1154                           ;incstack = 0
  1155  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1156  00000A  CFFA F001          	movff	pclath,??_high_isr
  1157  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
  1158  000012  CFE9 F003          	movff	fsr0l,??_high_isr+2
  1159  000016  CFEA F004          	movff	fsr0h,??_high_isr+3
  1160  00001A  CFE1 F005          	movff	fsr1l,??_high_isr+4
  1161  00001E  CFE2 F006          	movff	fsr1h,??_high_isr+5
  1162  000022  CFD9 F007          	movff	fsr2l,??_high_isr+6
  1163  000026  CFDA F008          	movff	fsr2h,??_high_isr+7
  1164  00002A  CFF3 F009          	movff	prodl,??_high_isr+8
  1165  00002E  CFF4 F00A          	movff	prodh,??_high_isr+9
  1166  000032  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  1167  000036  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  1168  00003A  CFF8 F00D          	movff	tblptru,??_high_isr+12
  1169  00003E  CFF5 F00E          	movff	tablat,??_high_isr+13
  1170  000042  C039  F00F         	movff	btemp,??_high_isr+14
  1171  000046  C03A  F010         	movff	btemp+1,??_high_isr+15
  1172  00004A  C03B  F011         	movff	btemp+2,??_high_isr+16
  1173  00004E  C03C  F012         	movff	btemp+3,??_high_isr+17
  1174                           
  1175                           ;main_key.c: 33: if(PIR1bits.RCIF){
  1176  000052  AA9E               	btfss	3998,5,c	;volatile
  1177  000054  D033               	goto	i2l41
  1178                           
  1179                           ;main_key.c: 34: tmprecive = RCREG1;
  1180  000056  CFAE F036          	movff	4014,_tmprecive	;volatile
  1181                           
  1182                           ;main_key.c: 35: if(tmprecive == start_str){
  1183  00005A  5038               	movf	_start_str,w,c
  1184  00005C  1836               	xorwf	_tmprecive,w,c
  1185  00005E  A4D8               	btfss	status,2,c
  1186  000060  D008               	goto	i2l38
  1187                           
  1188                           ;main_key.c: 36: read_en = 1;
  1189  000062  0E00               	movlw	0
  1190  000064  6E2F               	movwf	_read_en+1,c
  1191  000066  0E01               	movlw	1
  1192  000068  6E2E               	movwf	_read_en,c
  1193                           
  1194                           ;main_key.c: 37: index_recive = 0;
  1195  00006A  0E00               	movlw	0
  1196  00006C  6E31               	movwf	_index_recive+1,c
  1197  00006E  0E00               	movlw	0
  1198  000070  6E30               	movwf	_index_recive,c
  1199  000072                     i2l38:
  1200                           
  1201                           ;main_key.c: 38: }
  1202                           ;main_key.c: 39: if((tmprecive == end_str)&& read_en == 1 ){
  1203  000072  5037               	movf	_end_str,w,c
  1204  000074  1836               	xorwf	_tmprecive,w,c
  1205  000076  A4D8               	btfss	status,2,c
  1206  000078  D00A               	goto	i2l39
  1207  00007A  042E               	decf	_read_en,w,c
  1208  00007C  102F               	iorwf	_read_en+1,w,c
  1209  00007E  A4D8               	btfss	status,2,c
  1210  000080  D006               	goto	i2l39
  1211                           
  1212                           ;main_key.c: 40: read_en = 0;
  1213  000082  0E00               	movlw	0
  1214  000084  6E2F               	movwf	_read_en+1,c
  1215  000086  0E00               	movlw	0
  1216  000088  6E2E               	movwf	_read_en,c
  1217                           
  1218                           ;main_key.c: 41: isReciver = 1;
  1219  00008A  0E01               	movlw	1
  1220  00008C  6E34               	movwf	_isReciver,c
  1221  00008E                     i2l39:
  1222                           
  1223                           ;main_key.c: 42: }
  1224                           ;main_key.c: 43: if(read_en == 1){
  1225  00008E  042E               	decf	_read_en,w,c
  1226  000090  102F               	iorwf	_read_en+1,w,c
  1227  000092  A4D8               	btfss	status,2,c
  1228  000094  D013               	goto	i2l41
  1229                           
  1230                           ;main_key.c: 44: array_char[index_recive++] = tmprecive;
  1231  000096  0E28               	movlw	low _array_char
  1232  000098  2430               	addwf	_index_recive,w,c
  1233  00009A  6ED9               	movwf	fsr2l,c
  1234  00009C  0E00               	movlw	high _array_char
  1235  00009E  2031               	addwfc	_index_recive+1,w,c
  1236  0000A0  6EDA               	movwf	fsr2h,c
  1237  0000A2  C036  FFDF         	movff	_tmprecive,indf2
  1238  0000A6  4A30               	infsnz	_index_recive,f,c
  1239  0000A8  2A31               	incf	_index_recive+1,f,c
  1240                           
  1241                           ;main_key.c: 45: if(index_recive == 6)
  1242  0000AA  0E06               	movlw	6
  1243  0000AC  1830               	xorwf	_index_recive,w,c
  1244  0000AE  1031               	iorwf	_index_recive+1,w,c
  1245  0000B0  A4D8               	btfss	status,2,c
  1246  0000B2  D004               	goto	i2l41
  1247                           
  1248                           ;main_key.c: 46: index_recive = 0;
  1249  0000B4  0E00               	movlw	0
  1250  0000B6  6E31               	movwf	_index_recive+1,c
  1251  0000B8  0E00               	movlw	0
  1252  0000BA  6E30               	movwf	_index_recive,c
  1253  0000BC                     i2l41:
  1254  0000BC  C012  F03C         	movff	??_high_isr+17,btemp+3
  1255  0000C0  C011  F03B         	movff	??_high_isr+16,btemp+2
  1256  0000C4  C010  F03A         	movff	??_high_isr+15,btemp+1
  1257  0000C8  C00F  F039         	movff	??_high_isr+14,btemp
  1258  0000CC  C00E  FFF5         	movff	??_high_isr+13,tablat
  1259  0000D0  C00D  FFF8         	movff	??_high_isr+12,tblptru
  1260  0000D4  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  1261  0000D8  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  1262  0000DC  C00A  FFF4         	movff	??_high_isr+9,prodh
  1263  0000E0  C009  FFF3         	movff	??_high_isr+8,prodl
  1264  0000E4  C008  FFDA         	movff	??_high_isr+7,fsr2h
  1265  0000E8  C007  FFD9         	movff	??_high_isr+6,fsr2l
  1266  0000EC  C006  FFE2         	movff	??_high_isr+5,fsr1h
  1267  0000F0  C005  FFE1         	movff	??_high_isr+4,fsr1l
  1268  0000F4  C004  FFEA         	movff	??_high_isr+3,fsr0h
  1269  0000F8  C003  FFE9         	movff	??_high_isr+2,fsr0l
  1270  0000FC  C002  FFFB         	movff	??_high_isr+1,pclatu
  1271  000100  C001  FFFA         	movff	??_high_isr,pclath
  1272  000104  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1273  000106  0011               	retfie		f
  1274  000108                     __end_of_high_isr:
  1275                           	opt stack 0
  1276                           pclatu	equ	0xFFB
  1277                           pclath	equ	0xFFA
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           prodh	equ	0xFF4
  1283                           prodl	equ	0xFF3
  1284                           intcon	equ	0xFF2
  1285                           postinc0	equ	0xFEE
  1286                           fsr0h	equ	0xFEA
  1287                           fsr0l	equ	0xFE9
  1288                           wreg	equ	0xFE8
  1289                           fsr1h	equ	0xFE2
  1290                           fsr1l	equ	0xFE1
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           pclatu	equ	0xFFB
  1296                           pclath	equ	0xFFA
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           prodh	equ	0xFF4
  1302                           prodl	equ	0xFF3
  1303                           intcon	equ	0xFF2
  1304                           postinc0	equ	0xFEE
  1305                           fsr0h	equ	0xFEA
  1306                           fsr0l	equ	0xFE9
  1307                           wreg	equ	0xFE8
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           indf2	equ	0xFDF
  1311                           fsr2h	equ	0xFDA
  1312                           fsr2l	equ	0xFD9
  1313                           status	equ	0xFD8
  1314                           
  1315                           	psect	rparam
  1316  0000                     pclatu	equ	0xFFB
  1317                           pclath	equ	0xFFA
  1318                           tblptru	equ	0xFF8
  1319                           tblptrh	equ	0xFF7
  1320                           tblptrl	equ	0xFF6
  1321                           tablat	equ	0xFF5
  1322                           prodh	equ	0xFF4
  1323                           prodl	equ	0xFF3
  1324                           intcon	equ	0xFF2
  1325                           postinc0	equ	0xFEE
  1326                           fsr0h	equ	0xFEA
  1327                           fsr0l	equ	0xFE9
  1328                           wreg	equ	0xFE8
  1329                           fsr1h	equ	0xFE2
  1330                           fsr1l	equ	0xFE1
  1331                           indf2	equ	0xFDF
  1332                           fsr2h	equ	0xFDA
  1333                           fsr2l	equ	0xFD9
  1334                           status	equ	0xFD8
  1335                           
  1336                           	psect	temp
  1337  000039                     btemp:
  1338                           	opt stack 0
  1339  000039                     	ds	1
  1340  0000                     int$flags	set	btemp
  1341  0000                     wtemp6	set	btemp+1
  1342                           pclatu	equ	0xFFB
  1343                           pclath	equ	0xFFA
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           intcon	equ	0xFF2
  1351                           postinc0	equ	0xFEE
  1352                           fsr0h	equ	0xFEA
  1353                           fsr0l	equ	0xFE9
  1354                           wreg	equ	0xFE8
  1355                           fsr1h	equ	0xFE2
  1356                           fsr1l	equ	0xFE1
  1357                           indf2	equ	0xFDF
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8


Data Sizes:
    Strings     370
    Constant    0
    Data        2
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      56
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 187
		 -> STR_8(CODE[59]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[187]), 
		 -> STR_4(CODE[27]), STR_3(CODE[17]), STR_2(CODE[33]), STR_1(CODE[32]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 187
		 -> STR_8(CODE[59]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[187]), 
		 -> STR_4(CODE[27]), STR_3(CODE[17]), STR_2(CODE[33]), STR_1(CODE[32]), 

    UART1PutStr@str	PTR unsigned char  size(2) Largest target is 187
		 -> STR_8(CODE[59]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[187]), 
		 -> STR_4(CODE[27]), STR_3(CODE[17]), STR_2(CODE[33]), STR_1(CODE[32]), 


Critical Paths under _main in COMRAM

    _main->_UART1PutStr
    _UART1PutStr->_strlen

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5     902
                                             32 COMRAM     7     2      5
                        _UART1PutStr
                     _init_interrupt
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1PutStr                                          8     6      2     902
                                             24 COMRAM     8     6      2
                       _UART1PutChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART1PutChar                                         1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART1PutStr
     _UART1PutChar
     _strlen
   _init_interrupt

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      38       1       59.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38       7        0.0%
DATA                 0      0      38       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 19 14:25:17 2018

       ??_init_interrupt 0013                       l50 0128                       l52 0152  
                     l53 017C                       l47 0110                       l49 01C6  
                     l86 0214                       l87 01F4                      l717 02A8  
                    l637 0244                      l638 0240                      wreg 000FE8  
                   STR_1 3FA4                     STR_2 3F83                     STR_3 3FDF  
                   STR_4 3FC4                     STR_5 3E8D                     STR_6 3FF0  
                   STR_7 3FF8                     STR_8 3F48                     i2l41 00BC  
                   i2l38 0072                     i2l39 008E                     _main 010C  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0039                     prodh 000FF4  
                   prodl 000FF3                     start 0108             ___param_bank 000000  
                  ?_main 0021                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8                    wtemp6 003A          __initialization 0274  
           __end_of_main 01D6             ?_UART1PutStr 0019                   ??_main 0026  
          __activetblptr 000002                   _RCREG1 000FAE                   _TXREG1 000FAD  
       __end_of_high_isr 0108                   clear_0 0292                   _strlen 0236  
           __pdataCOMRAM 0037             __mediumconst 3E8C                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0298            ___rparam_used 000001           __pcstackCOMRAM 0001  
          ?_UART1PutChar 0001          UART1PutStr@size 001D                  ?_strlen 0013  
         ??_UART1PutChar 0013     __size_of_UART1PutStr 0060               _array_char 0028  
              ?_high_isr 0001               _attenuator 0032                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0274                  __ramtop 0200  
                __ptext0 010C                  __ptext1 02B2                  __ptext2 01D6  
                __ptext3 0236                  __ptext4 02A6                  _end_str 0037  
        __size_of_strlen 003E                  _read_en 002E  __size_of_init_interrupt 000A  
             ??_high_isr 0001     end_of_initialization 0298            __Lmediumconst 3E8C  
              _RCSTAbits 000FAB                  postinc0 000FEE                  strlen@s 0013  
              _TRISBbits 000F93                _TXSTAbits 000FAC     __end_of_UART1PutChar 02B2  
             _switch_amp 0035            __pidataCOMRAM 02BC           __end_of_strlen 0274  
    start_initialization 0274             _index_recive 0030                 ??_strlen 0015  
            __pbssCOMRAM 0028           _init_interrupt 02B2           UART1PutChar@Ch 0013  
      __size_of_high_isr 0100             UART1PutStr@i 001F           UART1PutStr@str 0019  
              __pintcode 0008            __pmediumconst 3E8C            ??_UART1PutStr 001B  
              _isReciver 0034   __end_of_init_interrupt 02BC    __size_of_UART1PutChar 000C  
               _PIE1bits 000F9D                 _PIR1bits 000F9E                 _RCONbits 000FD0  
              _start_str 0038                _tmprecive 0036          ?_init_interrupt 0001  
           _UART1PutChar 02A6      __end_of_UART1PutStr 0236                 __Hrparam 0000  
               __Lrparam 0000               _ANSELHbits 000F7F                 _high_isr 0008  
          __size_of_main 00CA                 int$flags 0039                 main@argc 0021  
               main@argv 0023              _UART1PutStr 01D6               _INTCONbits 000FF2  
               intlevel2 0000                 strlen@cp 0017  
