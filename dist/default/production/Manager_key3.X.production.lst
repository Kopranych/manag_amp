

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 04 18:16:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F14K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  00013E                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _end_str
    56  00013E  23                 	db	35
    57                           
    58                           ;initializer for _start_str
    59  00013F  2A                 	db	42
    60  0000                     _ADRES	set	4035
    61  0000                     _ADCON2bits	set	4032
    62  0000                     _ADCON1bits	set	4033
    63  0000                     _ADCON0bits	set	4034
    64  0000                     _SSPBUF	set	4041
    65  0000                     _SSPSTATbits	set	4039
    66  0000                     _SSPCON1bits	set	4038
    67  0000                     _PORTCbits	set	3970
    68  0000                     _TRISCbits	set	3988
    69  0000                     _TXREG1	set	4013
    70  0000                     _RCSTAbits	set	4011
    71  0000                     _SPBRG	set	4015
    72  0000                     _BAUDCONbits	set	4024
    73  0000                     _TXSTAbits	set	4012
    74  0000                     _TRISBbits	set	3987
    75  0000                     _PORTAbits	set	3968
    76  0000                     _TRISAbits	set	3986
    77  0000                     _ANSELHbits	set	3967
    78  0000                     _ANSELbits	set	3966
    79  0000                     _PIE1bits	set	3997
    80  0000                     _INTCONbits	set	4082
    81  0000                     _RCREG1	set	4014
    82  0000                     _PIR1bits	set	3998
    83  0000                     _SSPIF	set	31987
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  000110                     __pcinit:
    89                           	opt stack 0
    90  000110                     start_initialization:
    91                           	opt stack 0
    92  000110                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Initialize objects allocated to COMRAM (2 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97  000110  0E3E               	movlw	low __pidataCOMRAM
    98  000112  6EF6               	movwf	tblptrl,c
    99  000114  0E01               	movlw	high __pidataCOMRAM
   100  000116  6EF7               	movwf	tblptrh,c
   101  000118  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102  00011A  6EF8               	movwf	tblptru,c
   103  00011C  0009               	tblrd		*+	;fetch initializer
   104  00011E  CFF5 F026          	movff	tablat,__pdataCOMRAM
   105  000122  0009               	tblrd		*+	;fetch initializer
   106  000124  CFF5 F027          	movff	tablat,__pdataCOMRAM+1
   107                           
   108                           ; Clear objects allocated to COMRAM (14 bytes)
   109  000128  EE00  F018         	lfsr	0,__pbssCOMRAM
   110  00012C  0E0E               	movlw	14
   111  00012E                     clear_0:
   112  00012E  6AEE               	clrf	postinc0,c
   113  000130  06E8               	decf	wreg,f,c
   114  000132  E1FD               	bnz	clear_0
   115  000134                     end_of_initialization:
   116                           	opt stack 0
   117  000134                     __end_of__initialization:
   118                           	opt stack 0
   119  000134  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  000136  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  000138  0100               	movlb	0
   122  00013A  EFA0  F000         	goto	_main	;jump to C main() function
   123                           tblptru	equ	0xFF8
   124                           tblptrh	equ	0xFF7
   125                           tblptrl	equ	0xFF6
   126                           tablat	equ	0xFF5
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	bssCOMRAM
   131  000018                     __pbssCOMRAM:
   132                           	opt stack 0
   133  000018                     _array_char:
   134                           	opt stack 0
   135  000018                     	ds	5
   136  00001D                     _read_en:
   137                           	opt stack 0
   138  00001D                     	ds	2
   139  00001F                     _index_recive:
   140                           	opt stack 0
   141  00001F                     	ds	2
   142  000021                     _attenuator:
   143                           	opt stack 0
   144  000021                     	ds	2
   145  000023                     _isReciver:
   146                           	opt stack 0
   147  000023                     	ds	1
   148  000024                     _switch_amp:
   149                           	opt stack 0
   150  000024                     	ds	1
   151  000025                     _tmprecive:
   152                           	opt stack 0
   153  000025                     	ds	1
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           wreg	equ	0xFE8
   160                           
   161                           	psect	dataCOMRAM
   162  000026                     __pdataCOMRAM:
   163                           	opt stack 0
   164  000026                     _end_str:
   165                           	opt stack 0
   166  000026                     	ds	1
   167  000027                     _start_str:
   168                           	opt stack 0
   169  000027                     	ds	1
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	cstackCOMRAM
   178  000001                     __pcstackCOMRAM:
   179                           	opt stack 0
   180  000001                     ??_high_isr:
   181                           
   182                           ; 1 bytes @ 0x0
   183  000001                     	ds	18
   184  000013                     
   185                           ; 2 bytes @ 0x12
   186  000013                     	ds	2
   187  000015                     
   188                           ; 3 bytes @ 0x14
   189  000015                     	ds	3
   190  000018                     tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197                           ; 1 bytes @ 0x17
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 119 in file "main_key.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  argc            2   18[COMRAM] int 
   206 ;;  argv            3   20[COMRAM] PTR PTR unsigned char 
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  2   18[COMRAM] int 
   211 ;; Registers used:
   212 ;;		None
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1
   218 ;;      Params:         5       0       0
   219 ;;      Locals:         0       0       0
   220 ;;      Temps:          0       0       0
   221 ;;      Totals:         5       0       0
   222 ;;Total ram usage:        5 bytes
   223 ;; Hardware stack levels required when called:    1
   224 ;; This function calls:
   225 ;;		Nothing
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  000140                     __ptext0:
   233                           	opt stack 0
   234  000140                     _main:
   235                           	opt stack 30
   236                           
   237                           ;incstack = 0
   238                           ;main_key.c: 130: while(1){
   239  000140  D7FF               	goto	_main
   240  000142                     __end_of_main:
   241                           	opt stack 0
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           
   249 ;; *************** function _high_isr *****************
   250 ;; Defined at:
   251 ;;		line 92 in file "main_key.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1
   265 ;;      Params:         0       0       0
   266 ;;      Locals:         0       0       0
   267 ;;      Temps:         18       0       0
   268 ;;      Totals:        18       0       0
   269 ;;Total ram usage:       18 bytes
   270 ;; Hardware stack levels used:    1
   271 ;; This function calls:
   272 ;;		Nothing
   273 ;; This function is called by:
   274 ;;		Interrupt level 2
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           	psect	intcode
   279  000008                     __pintcode:
   280                           	opt stack 0
   281  000008                     _high_isr:
   282                           	opt stack 30
   283                           
   284                           ;incstack = 0
   285  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   286  00000A  CFFA F001          	movff	pclath,??_high_isr
   287  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
   288  000012  CFE9 F003          	movff	fsr0l,??_high_isr+2
   289  000016  CFEA F004          	movff	fsr0h,??_high_isr+3
   290  00001A  CFE1 F005          	movff	fsr1l,??_high_isr+4
   291  00001E  CFE2 F006          	movff	fsr1h,??_high_isr+5
   292  000022  CFD9 F007          	movff	fsr2l,??_high_isr+6
   293  000026  CFDA F008          	movff	fsr2h,??_high_isr+7
   294  00002A  CFF3 F009          	movff	prodl,??_high_isr+8
   295  00002E  CFF4 F00A          	movff	prodh,??_high_isr+9
   296  000032  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   297  000036  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   298  00003A  CFF8 F00D          	movff	tblptru,??_high_isr+12
   299  00003E  CFF5 F00E          	movff	tablat,??_high_isr+13
   300  000042  C028  F00F         	movff	btemp,??_high_isr+14
   301  000046  C029  F010         	movff	btemp+1,??_high_isr+15
   302  00004A  C02A  F011         	movff	btemp+2,??_high_isr+16
   303  00004E  C02B  F012         	movff	btemp+3,??_high_isr+17
   304                           
   305                           ;main_key.c: 93: if(PIR1bits.RCIF){
   306  000052  AA9E               	btfss	3998,5,c	;volatile
   307  000054  D035               	goto	i2l53
   308                           
   309                           ;main_key.c: 94: tmprecive = RCREG1;
   310  000056  CFAE F025          	movff	4014,_tmprecive	;volatile
   311                           
   312                           ;main_key.c: 95: if(tmprecive == start_str){
   313  00005A  5027               	movf	_start_str,w,c
   314  00005C  1825               	xorwf	_tmprecive,w,c
   315  00005E  A4D8               	btfss	status,2,c
   316  000060  D008               	goto	i2l50
   317                           
   318                           ;main_key.c: 96: read_en = 1;
   319  000062  0E00               	movlw	0
   320  000064  6E1E               	movwf	_read_en+1,c
   321  000066  0E01               	movlw	1
   322  000068  6E1D               	movwf	_read_en,c
   323                           
   324                           ;main_key.c: 97: index_recive = 0;
   325  00006A  0E00               	movlw	0
   326  00006C  6E20               	movwf	_index_recive+1,c
   327  00006E  0E00               	movlw	0
   328  000070  6E1F               	movwf	_index_recive,c
   329  000072                     i2l50:
   330                           
   331                           ;main_key.c: 98: }
   332                           ;main_key.c: 99: if((tmprecive == end_str)&& read_en == 1 ){
   333  000072  5026               	movf	_end_str,w,c
   334  000074  1825               	xorwf	_tmprecive,w,c
   335  000076  A4D8               	btfss	status,2,c
   336  000078  D00A               	goto	i2l51
   337  00007A  041D               	decf	_read_en,w,c
   338  00007C  101E               	iorwf	_read_en+1,w,c
   339  00007E  A4D8               	btfss	status,2,c
   340  000080  D006               	goto	i2l51
   341                           
   342                           ;main_key.c: 100: read_en = 0;
   343  000082  0E00               	movlw	0
   344  000084  6E1E               	movwf	_read_en+1,c
   345  000086  0E00               	movlw	0
   346  000088  6E1D               	movwf	_read_en,c
   347                           
   348                           ;main_key.c: 101: isReciver = 1;
   349  00008A  0E01               	movlw	1
   350  00008C  6E23               	movwf	_isReciver,c
   351  00008E                     i2l51:
   352                           
   353                           ;main_key.c: 102: }
   354                           ;main_key.c: 103: if(read_en == 1){
   355  00008E  041D               	decf	_read_en,w,c
   356  000090  101E               	iorwf	_read_en+1,w,c
   357  000092  A4D8               	btfss	status,2,c
   358  000094  D015               	goto	i2l53
   359                           
   360                           ;main_key.c: 104: array_char[index_recive++] = tmprecive;
   361  000096  0E18               	movlw	low _array_char
   362  000098  241F               	addwf	_index_recive,w,c
   363  00009A  6ED9               	movwf	fsr2l,c
   364  00009C  0E00               	movlw	high _array_char
   365  00009E  2020               	addwfc	_index_recive+1,w,c
   366  0000A0  6EDA               	movwf	fsr2h,c
   367  0000A2  C025  FFDF         	movff	_tmprecive,indf2
   368  0000A6  4A1F               	infsnz	_index_recive,f,c
   369  0000A8  2A20               	incf	_index_recive+1,f,c
   370                           
   371                           ;main_key.c: 105: if(index_recive == 5){
   372  0000AA  0E05               	movlw	5
   373  0000AC  181F               	xorwf	_index_recive,w,c
   374  0000AE  1020               	iorwf	_index_recive+1,w,c
   375  0000B0  A4D8               	btfss	status,2,c
   376  0000B2  D006               	goto	i2l53
   377                           
   378                           ;main_key.c: 106: index_recive = 0;
   379  0000B4  0E00               	movlw	0
   380  0000B6  6E20               	movwf	_index_recive+1,c
   381  0000B8  0E00               	movlw	0
   382  0000BA  6E1F               	movwf	_index_recive,c
   383                           
   384                           ;main_key.c: 107: array_char[0] = 2;
   385  0000BC  0E02               	movlw	2
   386  0000BE  6E18               	movwf	_array_char,c
   387  0000C0                     i2l53:
   388  0000C0  C012  F02B         	movff	??_high_isr+17,btemp+3
   389  0000C4  C011  F02A         	movff	??_high_isr+16,btemp+2
   390  0000C8  C010  F029         	movff	??_high_isr+15,btemp+1
   391  0000CC  C00F  F028         	movff	??_high_isr+14,btemp
   392  0000D0  C00E  FFF5         	movff	??_high_isr+13,tablat
   393  0000D4  C00D  FFF8         	movff	??_high_isr+12,tblptru
   394  0000D8  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   395  0000DC  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   396  0000E0  C00A  FFF4         	movff	??_high_isr+9,prodh
   397  0000E4  C009  FFF3         	movff	??_high_isr+8,prodl
   398  0000E8  C008  FFDA         	movff	??_high_isr+7,fsr2h
   399  0000EC  C007  FFD9         	movff	??_high_isr+6,fsr2l
   400  0000F0  C006  FFE2         	movff	??_high_isr+5,fsr1h
   401  0000F4  C005  FFE1         	movff	??_high_isr+4,fsr1l
   402  0000F8  C004  FFEA         	movff	??_high_isr+3,fsr0h
   403  0000FC  C003  FFE9         	movff	??_high_isr+2,fsr0l
   404  000100  C002  FFFB         	movff	??_high_isr+1,pclatu
   405  000104  C001  FFFA         	movff	??_high_isr,pclath
   406  000108  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   407  00010A  0011               	retfie		f
   408  00010C                     __end_of_high_isr:
   409                           	opt stack 0
   410  0000                     pclatu	equ	0xFFB
   411                           pclath	equ	0xFFA
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           prodh	equ	0xFF4
   417                           prodl	equ	0xFF3
   418                           postinc0	equ	0xFEE
   419                           fsr0h	equ	0xFEA
   420                           fsr0l	equ	0xFE9
   421                           wreg	equ	0xFE8
   422                           fsr1h	equ	0xFE2
   423                           fsr1l	equ	0xFE1
   424                           indf2	equ	0xFDF
   425                           fsr2h	equ	0xFDA
   426                           fsr2l	equ	0xFD9
   427                           status	equ	0xFD8
   428                           pclatu	equ	0xFFB
   429                           pclath	equ	0xFFA
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           prodh	equ	0xFF4
   435                           prodl	equ	0xFF3
   436                           postinc0	equ	0xFEE
   437                           fsr0h	equ	0xFEA
   438                           fsr0l	equ	0xFE9
   439                           wreg	equ	0xFE8
   440                           fsr1h	equ	0xFE2
   441                           fsr1l	equ	0xFE1
   442                           indf2	equ	0xFDF
   443                           fsr2h	equ	0xFDA
   444                           fsr2l	equ	0xFD9
   445                           status	equ	0xFD8
   446                           
   447                           	psect	rparam
   448  0000                     pclatu	equ	0xFFB
   449                           pclath	equ	0xFFA
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           prodh	equ	0xFF4
   455                           prodl	equ	0xFF3
   456                           postinc0	equ	0xFEE
   457                           fsr0h	equ	0xFEA
   458                           fsr0l	equ	0xFE9
   459                           wreg	equ	0xFE8
   460                           fsr1h	equ	0xFE2
   461                           fsr1l	equ	0xFE1
   462                           indf2	equ	0xFDF
   463                           fsr2h	equ	0xFDA
   464                           fsr2l	equ	0xFD9
   465                           status	equ	0xFD8
   466                           
   467                           	psect	temp
   468  000028                     btemp:
   469                           	opt stack 0
   470  000028                     	ds	1
   471  0000                     int$flags	set	btemp
   472  0000                     wtemp6	set	btemp+1
   473                           pclatu	equ	0xFFB
   474                           pclath	equ	0xFFA
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           prodh	equ	0xFF4
   480                           prodl	equ	0xFF3
   481                           postinc0	equ	0xFEE
   482                           fsr0h	equ	0xFEA
   483                           fsr0l	equ	0xFE9
   484                           wreg	equ	0xFE8
   485                           fsr1h	equ	0xFE2
   486                           fsr1l	equ	0xFE1
   487                           indf2	equ	0xFDF
   488                           fsr2h	equ	0xFDA
   489                           fsr2l	equ	0xFD9
   490                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      39
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5       0
                                             18 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      27       1       41.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27       7        0.0%
DATA                 0      0      27       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 04 18:16:30 2018

            _SSPSTATbits 000FC7              __CFG_CPD$ON 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CPB$OFF 000000             __CFG_BORV$27 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     i2l50 0072  
                   i2l51 008E                     i2l53 00C0                     _main 0140  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0028                     prodh 000FF4  
                   prodl 000FF3                     start 010C            __CFG_IESO$OFF 000000  
          __CFG_FOSC$IRC 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0013                    _ADRES 000FC3           __CFG_BBSIZ$OFF 000000  
                  _SPBRG 000FAF                    _SSPIF 007CF3            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 0029  
         __CFG_HFOFST$ON 000000          __initialization 0110             __end_of_main 0142  
         __CFG_PCLKEN$ON 000000                   ??_main 0018            __activetblptr 000000  
         __CFG_PLLEN$OFF 000000           __CFG_WDTEN$OFF 000000                   _RCREG1 000FAE  
                 _SSPBUF 000FC9                   _TXREG1 000FAD           __CFG_PWRTEN$ON 000000  
         __CFG_XINST$OFF 000000         __end_of_high_isr 010C           __CFG_STVREN$ON 000000  
                 clear_0 012E             __pdataCOMRAM 0026                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0134            ___rparam_used 000001           __pcstackCOMRAM 0001  
             _array_char 0018                ?_high_isr 0001               _attenuator 0021  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0110  
              _ANSELbits 000F7E                  __ramtop 0200                  __ptext0 0140  
                _end_str 0026                  _read_en 001D               ??_high_isr 0001  
   end_of_initialization 0134                _RCSTAbits 000FAB                  postinc0 000FEE  
              _PORTAbits 000F80                _PORTCbits 000F82                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94                _TXSTAbits 000FAC  
             _switch_amp 0024              _BAUDCONbits 000FB8            __pidataCOMRAM 013E  
    start_initialization 0110             _index_recive 001F              __pbssCOMRAM 0018  
      __size_of_high_isr 0104                __pintcode 0008                _isReciver 0023  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
              _start_str 0027                _tmprecive 0025                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000               _ANSELHbits 000F7F  
               _high_isr 0008            __size_of_main 0002                 int$flags 0028  
               main@argc 0013                 main@argv 0015               _INTCONbits 000FF2  
               intlevel2 0000              _SSPCON1bits 000FC6  
